#+html: <p align="center"><img src="images/logo.png" width="40%"/></p>

Tool to backup your git repositories to a git provider.

** What is Omnigit?

Omnigit is a tool that automatically backs up multiple repositories from one git provider to another.
The tool will ask you which providers you want to backup the repositories too. Furthermore, it will search for all the repositories to back up in a path given by the user.

The below images follow this flow:

1. Ask in which git providers we must create the backups
2. Ask which repositories to backup.
3. Show the "configuration" and ask the user if they want to proceed.

#+html: <p align="center"> <img src="images/select_provider.png" width="20%"> <img src="images/select_repo.png" width="20%"> <img src="images/configuration.png" width="20%"> </p>

If all went well, the tool creates the backups. From now on, whenever you do a push, all git providers will receive the update.

** Features

- Github and Gitlab are supported by default.
- Git providers easily extensible (add new providers to git\under{}providers.sh).
- Only needs to run once.

** Installation instructions

Clone this repository in your machine.

#+begin_src sh
git clone git@github.com:danielorihuela/omnigit.git
#+end_src

** Running Omnigit

Omnigit has two preconditions. 

1. You need to have an account on the git provider you want to use.
2. You need to have configured an SSH key for the git provider.

If that is already the case, you can proceed. Otherwise, please check [[https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent][how to generate an ssh key]] 
and how to add a new SSH key to the provider. Github for example, provides us the following [[https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account][documentation]].

You can run Omnigit with the following command:

#+begin_src sh
./omnigit "directory absolute path"
#+end_src

Do not use a relative path. The tool is not going to work.

*Good example*

#+begin_src sh
./omnigit ~/Desktop
#+end_src

*Bad example*

#+begin_src sh
./omnigit ../
#+end_src

If you want to call Omnigit from anywhere on your computer, you can configure an alias.

In Bash would be something like:
#+begin_src sh
# alias omnigit='export PATH=$PATH:"repository path" && "repository path"/omnigit.sh'
alias omnigit='export PATH=$PATH:~/Desktop/Side-Project/omnigit && ~/Desktop/Side-Projects/omnigit/omnigit.sh'
#+end_src

** Contributing

Feel free to improve that project by yourself and create a PR.
